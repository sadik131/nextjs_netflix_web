// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id           String         @id @default(uuid())
  name         String
  email        String
  password     String
  role         Role           @default(USER)
  Save         Save[]
  Favorites    Favorites[]
  Subscription Subscription[]
}

model Subscription {
  id        Int      @id @default(autoincrement())
  userEmail String
  // user      User     @relation(fields: [useremail], references: [email])
  stripeId  String   @unique
  status    String
  startDate DateTime
  endDate   DateTime
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Movies {
  id          String      @id @default(uuid())
  title       String
  thumbnail   String
  movieUrl    String
  release     DateTime
  description String
  genre       String
  age         Int
  duration    Float
  Save        Save[]
  Favorites   Favorites[]
}

model Favorites {
  id      String  @id @default(uuid())
  movie   Movies? @relation(fields: [movieId], references: [id])
  movieId String
  user    User?   @relation(fields: [userId], references: [id])
  userId  String
}

model Save {
  id     String @id @default(uuid())
  save   Movies @relation(fields: [saveId], references: [id])
  saveId String
  user   User   @relation(fields: [userId], references: [id])
  userId String
}
